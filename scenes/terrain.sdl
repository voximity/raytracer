skybox {
    type: "cubemap",
    image: "assets/space.png",
}

fn fbm(x, y, base_freq, iterations) {
    let v = 0
    let freq = base_freq
    let amp = 1
    for i in 0 to iterations {
        v = v + perlin(x * freq, y * freq) * amp
        freq = freq * 2
        amp = amp * 0.5
    }
    return v
}

# generate the noisemap
let w = 72
let h = 72
let fbm_iterations = 3
let fbm_freq = 0.08
let fbm_amp = 2
let noisemap = []

for y in 0 to h {
    push(noisemap, [])
    for x in 0 to w {
        push(noisemap[y], fbm(x, y, fbm_freq, fbm_iterations) * fbm_amp)
    }
}

# prepare the scene
sun {
    vector: <-0.8, -1, -0.2>,
}

camera {
    origin: <-4, 2, 6>,
    yaw: 0.3,
    pitch: -0.3,
    vw: 1920,
    vh: 1080,
}

# generate the mesh
let verts = []
for y in 0 to h {
    for x in 0 to w {
        push(verts, <x, noisemap[y][x], y>)
    }
}

let tris = []
for y in 0 to h - 1 {
    for x in 0 to w - 1 {
        push(tris, x + y * w)
        push(tris, x + (y + 1) * w)
        push(tris, x + 1 + y * w)

        push(tris, x + (y + 1) * w)
        push(tris, x + 1 + (y + 1) * w)
        push(tris, x + 1 + y * w)
    }
}

mesh {
    verts,
    tris,
    position: <0, -3, -5>,
    material: {
        reflectiveness: 0.8,
    }
}
